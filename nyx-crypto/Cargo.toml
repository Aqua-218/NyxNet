[package]
name = "nyx-crypto"
version = "0.1.0"
edition = "2021"

description = "Nyx cryptography engine implementing Noise_Nyx handshake and HKDF wrappers."
license = "MIT OR Apache-2.0"

[features]
default = ["classic"]

# Classic (Elliptic Curve) X25519 only build
classic = ["x25519-dalek"]

# Kyber-only post-quantum build
kyber = ["pqcrypto-kyber", "pqcrypto-traits"]

# BIKE post-quantum build (experimental; may fail until crate published)
bike = ["pqcrypto-traits"]

# Convenience flag: build solely with PQ algorithms (Kyber by default)
hybrid = ["classic", "kyber"]

# Convenience flag: build solely with PQ algorithms (Kyber by default)
pq_only = ["kyber"]

# Enable criterion benchmarks
bench = ["criterion"]

[dependencies]
# Core crypto deps
# Classic X25519 (enabled by feature "classic")
# X25519 implementation (classic mode)
x25519-dalek = { version = "2.0.1", default-features = false, optional = true }

# Post-quantum KEMs (enabled by feature flags below)
pqcrypto-kyber = { version = "0.7", optional = true, package = "pqcrypto-kyber" }
pqcrypto-traits = { version = "0.3", optional = true }

# Symmetric primitives
blake3 = { version = "1.5", features = ["pure"] }
sha2 = "0.10"
chacha20poly1305 = { version = "0.9", default-features = false, features=["alloc"] }
hkdf = "0.12"
rand_core = { version = "0.9" }
rand_core_06 = { package = "rand_core", version = "0.6", features=["std","getrandom"] }

# Dev / bench
criterion = { version = "0.5", optional = true }

# Modern zeroize version shared with rustls
zeroize = { version = "1.8", features=["zeroize_derive"] }
thiserror = "1.0"

age = { version = "0.11", default-features = false, features=["armor"] }

[dev-dependencies]
hex-literal = "0.4"
