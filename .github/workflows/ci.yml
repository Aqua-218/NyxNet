name: ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-protoc@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --all --verbose
      - name: Test
        run: cargo test --all --verbose
  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-protoc@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: miri
      - name: setup miri
        run: cargo miri setup
      - name: run miri tests
        run: cargo miri test --workspace --exclude nyx-telemetry

  windows:
    name: Windows MSVC build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-protoc@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-pc-windows-msvc
      - name: Build
        run: cargo build --all --verbose
      - name: Test
        run: cargo test --all --verbose

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}/nyxd:${{ github.sha }} 
  package-chart:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Package Helm chart
        run: |
          sudo apt-get update && sudo apt-get install -y helm
          helm package charts/nyx --destination ./chart-dist
      - uses: actions/upload-artifact@v3
        with:
          name: nyx-chart
          path: chart-dist/*.tgz 