name: Nyx CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        features: ["", "pq", "pq_only"]
    name: cargo test (${{ matrix.os }}, features="${{ matrix.features }}")
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Build & Test
        run: |
          if [ "${{ matrix.features }}" = "" ]; then
            cargo test --all --all-features
          else
            cargo test --all --no-default-features --features "${{ matrix.features }}"
          fi
        shell: bash 

  wasm-build:
    runs-on: ubuntu-latest
    name: wasm32 build
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust (wasm target)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
          override: true
      - name: Build nyx-sdk-wasm
        run: |
          cargo build -p nyx-sdk-wasm --target wasm32-unknown-unknown --release 